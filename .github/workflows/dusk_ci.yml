on:
  pull_request:
  push:
    branches: master

name: Continuous integration

jobs:
  analyze:
    name: Code Analysis
    uses: dusk-network/.github/.github/workflows/code-analysis.yml@main
    with:
      clippy_default: false
      clippy_args: --features=rkyv/size_32

  dusk_analyzer:
    name: Dusk Analyzer
    uses: dusk-network/.github/.github/workflows/dusk-analysis.yml@main

  build_benches:
    name: Build Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: cargo bench --no-run

  run_examples:
    name: Run Examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: cargo run --release --example circuit

  build_docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: make doc
      - run: make doc-internal

  build_no_std:
    name: Build no_std
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup target add thumbv6m-none-eabi
      - uses: Swatinem/rust-cache@v2

      - name: Build project with alloc
        run: cargo build --release --no-default-features --features alloc --target thumbv6m-none-eabi

      - name: Build project without alloc
        run: cargo build --release --no-default-features --target thumbv6m-none-eabi

  ci:
    name: Test with all features
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt install -y kcov
      - run: RUSTFLAGS='-Cdebuginfo=2 -Cinline-threshold=0 -Clink-dead-code' cargo test --release --no-run --all-features
      - name: Collect coverage
        run: >
          find target/release/deps -type f -executable ! -name "*.*" |
          xargs -n1 kcov --exclude-pattern=/.cargo,/usr/lib --verify target/cov
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  test_nightly_std:
    name: Nightly tests std
    uses: dusk-network/.github/.github/workflows/run-tests.yml@main
